Grammar:

Rule 0     S' -> program
Rule 1     program -> DECLARE declarations IN commands END
Rule 2     declarations -> empty
Rule 3     declarations -> declarations PIDENTIFIER LPAREN NUMBER COLON NUMBER RPAREN SEMICOLON
Rule 4     declarations -> declarations PIDENTIFIER SEMICOLON
Rule 5     commands -> command
Rule 6     commands -> commands command
Rule 7     command -> WRITE value SEMICOLON
Rule 8     command -> READ identifier SEMICOLON
Rule 9     command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
Rule 10    command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
Rule 11    command -> DO commands WHILE condition ENDDO
Rule 12    command -> WHILE condition DO commands ENDWHILE
Rule 13    command -> IF condition THEN commands ELSE commands ENDIF
Rule 14    command -> IF condition THEN commands ENDIF
Rule 15    command -> identifier ASSIGN expression SEMICOLON
Rule 16    expression -> value MODULO value
Rule 17    expression -> value DIVIDE value  [precedence=left, level=2]
Rule 18    expression -> value TIMES value  [precedence=left, level=2]
Rule 19    expression -> value MINUS value  [precedence=left, level=1]
Rule 20    expression -> value PLUS value  [precedence=left, level=1]
Rule 21    expression -> value
Rule 22    condition -> value GREATER_EQUALS value
Rule 23    condition -> value LESSER_EQUALS value
Rule 24    condition -> value GREATER_THAN value
Rule 25    condition -> value LESSER_THAN value
Rule 26    condition -> value NOT_EQUALS value
Rule 27    condition -> value EQUALS value
Rule 28    value -> identifier
Rule 29    value -> NUMBER
Rule 30    identifier -> PIDENTIFIER LPAREN NUMBER RPAREN
Rule 31    identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN
Rule 32    identifier -> PIDENTIFIER
Rule 33    empty -> <empty>

Terminals, with rules where they appear:

ASSIGN               : 15
COLON                : 3
DECLARE              : 1
DIVIDE               : 17
DO                   : 9 10 11 12
DOWNTO               : 9
ELSE                 : 13
END                  : 1
ENDDO                : 11
ENDFOR               : 9 10
ENDIF                : 13 14
ENDWHILE             : 12
EQUALS               : 27
FOR                  : 9 10
FROM                 : 9 10
GREATER_EQUALS       : 22
GREATER_THAN         : 24
IF                   : 13 14
IN                   : 1
LESSER_EQUALS        : 23
LESSER_THAN          : 25
LPAREN               : 3 30 31
MINUS                : 19
MODULO               : 16
NOT_EQUALS           : 26
NUMBER               : 3 3 29 30
PIDENTIFIER          : 3 4 9 10 30 31 31 32
PLUS                 : 20
READ                 : 8
RPAREN               : 3 30 31
SEMICOLON            : 3 4 7 8 15
THEN                 : 13 14
TIMES                : 18
TO                   : 10
WHILE                : 11 12
WRITE                : 7
error                : 

Nonterminals, with rules where they appear:

command              : 5 6
commands             : 1 6 9 10 11 12 13 13 14
condition            : 11 12 13 14
declarations         : 1 3 4
empty                : 2
expression           : 15
identifier           : 8 15 28
program              : 0
value                : 7 9 9 10 10 16 16 17 17 18 18 19 19 20 20 21 22 22 23 23 24 24 25 25 26 26 27 27


state 0

    (0) S' -> . program
    (1) program -> . DECLARE declarations IN commands END
    DECLARE         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .


state 2

    (1) program -> DECLARE . declarations IN commands END
    (2) declarations -> . empty
    (3) declarations -> . declarations PIDENTIFIER LPAREN NUMBER COLON NUMBER RPAREN SEMICOLON
    (4) declarations -> . declarations PIDENTIFIER SEMICOLON
    (33) empty -> .
    IN              reduce using rule 33 (empty -> .)
    PIDENTIFIER     reduce using rule 33 (empty -> .)

    declarations                   shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) program -> DECLARE declarations . IN commands END
    (3) declarations -> declarations . PIDENTIFIER LPAREN NUMBER COLON NUMBER RPAREN SEMICOLON
    (4) declarations -> declarations . PIDENTIFIER SEMICOLON
    IN              shift and go to state 5
    PIDENTIFIER     shift and go to state 6


state 4

    (2) declarations -> empty .
    IN              reduce using rule 2 (declarations -> empty .)
    PIDENTIFIER     reduce using rule 2 (declarations -> empty .)


state 5

    (1) program -> DECLARE declarations IN . commands END
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 7
    command                        shift and go to state 8
    identifier                     shift and go to state 11

state 6

    (3) declarations -> declarations PIDENTIFIER . LPAREN NUMBER COLON NUMBER RPAREN SEMICOLON
    (4) declarations -> declarations PIDENTIFIER . SEMICOLON
    LPAREN          shift and go to state 17
    SEMICOLON       shift and go to state 18


state 7

    (1) program -> DECLARE declarations IN commands . END
    (6) commands -> commands . command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    END             shift and go to state 19
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 11

state 8

    (5) commands -> command .
    END             reduce using rule 5 (commands -> command .)
    WRITE           reduce using rule 5 (commands -> command .)
    READ            reduce using rule 5 (commands -> command .)
    FOR             reduce using rule 5 (commands -> command .)
    DO              reduce using rule 5 (commands -> command .)
    WHILE           reduce using rule 5 (commands -> command .)
    IF              reduce using rule 5 (commands -> command .)
    PIDENTIFIER     reduce using rule 5 (commands -> command .)
    ENDWHILE        reduce using rule 5 (commands -> command .)
    ELSE            reduce using rule 5 (commands -> command .)
    ENDIF           reduce using rule 5 (commands -> command .)
    ENDFOR          reduce using rule 5 (commands -> command .)


state 9

    (7) command -> WRITE . value SEMICOLON
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 21
    identifier                     shift and go to state 22

state 10

    (8) command -> READ . identifier SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    PIDENTIFIER     shift and go to state 13

    identifier                     shift and go to state 24

state 11

    (15) command -> identifier . ASSIGN expression SEMICOLON
    ASSIGN          shift and go to state 25


state 12

    (9) command -> FOR . PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> FOR . PIDENTIFIER FROM value TO value DO commands ENDFOR
    PIDENTIFIER     shift and go to state 26


state 13

    (30) identifier -> PIDENTIFIER . LPAREN NUMBER RPAREN
    (31) identifier -> PIDENTIFIER . LPAREN PIDENTIFIER RPAREN
    (32) identifier -> PIDENTIFIER .
    LPAREN          shift and go to state 27
    ASSIGN          reduce using rule 32 (identifier -> PIDENTIFIER .)
    SEMICOLON       reduce using rule 32 (identifier -> PIDENTIFIER .)
    GREATER_EQUALS  reduce using rule 32 (identifier -> PIDENTIFIER .)
    LESSER_EQUALS   reduce using rule 32 (identifier -> PIDENTIFIER .)
    GREATER_THAN    reduce using rule 32 (identifier -> PIDENTIFIER .)
    LESSER_THAN     reduce using rule 32 (identifier -> PIDENTIFIER .)
    NOT_EQUALS      reduce using rule 32 (identifier -> PIDENTIFIER .)
    EQUALS          reduce using rule 32 (identifier -> PIDENTIFIER .)
    MODULO          reduce using rule 32 (identifier -> PIDENTIFIER .)
    DIVIDE          reduce using rule 32 (identifier -> PIDENTIFIER .)
    TIMES           reduce using rule 32 (identifier -> PIDENTIFIER .)
    MINUS           reduce using rule 32 (identifier -> PIDENTIFIER .)
    PLUS            reduce using rule 32 (identifier -> PIDENTIFIER .)
    DOWNTO          reduce using rule 32 (identifier -> PIDENTIFIER .)
    TO              reduce using rule 32 (identifier -> PIDENTIFIER .)
    DO              reduce using rule 32 (identifier -> PIDENTIFIER .)
    THEN            reduce using rule 32 (identifier -> PIDENTIFIER .)
    ENDDO           reduce using rule 32 (identifier -> PIDENTIFIER .)


state 14

    (11) command -> DO . commands WHILE condition ENDDO
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 28
    command                        shift and go to state 8
    identifier                     shift and go to state 11

state 15

    (12) command -> WHILE . condition DO commands ENDWHILE
    (22) condition -> . value GREATER_EQUALS value
    (23) condition -> . value LESSER_EQUALS value
    (24) condition -> . value GREATER_THAN value
    (25) condition -> . value LESSER_THAN value
    (26) condition -> . value NOT_EQUALS value
    (27) condition -> . value EQUALS value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    condition                      shift and go to state 29
    value                          shift and go to state 30
    identifier                     shift and go to state 22

state 16

    (13) command -> IF . condition THEN commands ELSE commands ENDIF
    (14) command -> IF . condition THEN commands ENDIF
    (22) condition -> . value GREATER_EQUALS value
    (23) condition -> . value LESSER_EQUALS value
    (24) condition -> . value GREATER_THAN value
    (25) condition -> . value LESSER_THAN value
    (26) condition -> . value NOT_EQUALS value
    (27) condition -> . value EQUALS value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    condition                      shift and go to state 31
    value                          shift and go to state 30
    identifier                     shift and go to state 22

state 17

    (3) declarations -> declarations PIDENTIFIER LPAREN . NUMBER COLON NUMBER RPAREN SEMICOLON
    NUMBER          shift and go to state 32


state 18

    (4) declarations -> declarations PIDENTIFIER SEMICOLON .
    IN              reduce using rule 4 (declarations -> declarations PIDENTIFIER SEMICOLON .)
    PIDENTIFIER     reduce using rule 4 (declarations -> declarations PIDENTIFIER SEMICOLON .)


state 19

    (1) program -> DECLARE declarations IN commands END .
    $end            reduce using rule 1 (program -> DECLARE declarations IN commands END .)


state 20

    (6) commands -> commands command .
    END             reduce using rule 6 (commands -> commands command .)
    WRITE           reduce using rule 6 (commands -> commands command .)
    READ            reduce using rule 6 (commands -> commands command .)
    FOR             reduce using rule 6 (commands -> commands command .)
    DO              reduce using rule 6 (commands -> commands command .)
    WHILE           reduce using rule 6 (commands -> commands command .)
    IF              reduce using rule 6 (commands -> commands command .)
    PIDENTIFIER     reduce using rule 6 (commands -> commands command .)
    ENDWHILE        reduce using rule 6 (commands -> commands command .)
    ELSE            reduce using rule 6 (commands -> commands command .)
    ENDIF           reduce using rule 6 (commands -> commands command .)
    ENDFOR          reduce using rule 6 (commands -> commands command .)


state 21

    (7) command -> WRITE value . SEMICOLON
    SEMICOLON       shift and go to state 33


state 22

    (28) value -> identifier .
    SEMICOLON       reduce using rule 28 (value -> identifier .)
    GREATER_EQUALS  reduce using rule 28 (value -> identifier .)
    LESSER_EQUALS   reduce using rule 28 (value -> identifier .)
    GREATER_THAN    reduce using rule 28 (value -> identifier .)
    LESSER_THAN     reduce using rule 28 (value -> identifier .)
    NOT_EQUALS      reduce using rule 28 (value -> identifier .)
    EQUALS          reduce using rule 28 (value -> identifier .)
    MODULO          reduce using rule 28 (value -> identifier .)
    DIVIDE          reduce using rule 28 (value -> identifier .)
    TIMES           reduce using rule 28 (value -> identifier .)
    MINUS           reduce using rule 28 (value -> identifier .)
    PLUS            reduce using rule 28 (value -> identifier .)
    DOWNTO          reduce using rule 28 (value -> identifier .)
    TO              reduce using rule 28 (value -> identifier .)
    DO              reduce using rule 28 (value -> identifier .)
    THEN            reduce using rule 28 (value -> identifier .)
    ENDDO           reduce using rule 28 (value -> identifier .)


state 23

    (29) value -> NUMBER .
    SEMICOLON       reduce using rule 29 (value -> NUMBER .)
    GREATER_EQUALS  reduce using rule 29 (value -> NUMBER .)
    LESSER_EQUALS   reduce using rule 29 (value -> NUMBER .)
    GREATER_THAN    reduce using rule 29 (value -> NUMBER .)
    LESSER_THAN     reduce using rule 29 (value -> NUMBER .)
    NOT_EQUALS      reduce using rule 29 (value -> NUMBER .)
    EQUALS          reduce using rule 29 (value -> NUMBER .)
    MODULO          reduce using rule 29 (value -> NUMBER .)
    DIVIDE          reduce using rule 29 (value -> NUMBER .)
    TIMES           reduce using rule 29 (value -> NUMBER .)
    MINUS           reduce using rule 29 (value -> NUMBER .)
    PLUS            reduce using rule 29 (value -> NUMBER .)
    DOWNTO          reduce using rule 29 (value -> NUMBER .)
    TO              reduce using rule 29 (value -> NUMBER .)
    DO              reduce using rule 29 (value -> NUMBER .)
    THEN            reduce using rule 29 (value -> NUMBER .)
    ENDDO           reduce using rule 29 (value -> NUMBER .)


state 24

    (8) command -> READ identifier . SEMICOLON
    SEMICOLON       shift and go to state 34


state 25

    (15) command -> identifier ASSIGN . expression SEMICOLON
    (16) expression -> . value MODULO value
    (17) expression -> . value DIVIDE value
    (18) expression -> . value TIMES value
    (19) expression -> . value MINUS value
    (20) expression -> . value PLUS value
    (21) expression -> . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    identifier                     shift and go to state 22
    expression                     shift and go to state 35
    value                          shift and go to state 36

state 26

    (9) command -> FOR PIDENTIFIER . FROM value DOWNTO value DO commands ENDFOR
    (10) command -> FOR PIDENTIFIER . FROM value TO value DO commands ENDFOR
    FROM            shift and go to state 37


state 27

    (30) identifier -> PIDENTIFIER LPAREN . NUMBER RPAREN
    (31) identifier -> PIDENTIFIER LPAREN . PIDENTIFIER RPAREN
    NUMBER          shift and go to state 39
    PIDENTIFIER     shift and go to state 38


state 28

    (11) command -> DO commands . WHILE condition ENDDO
    (6) commands -> commands . command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    WHILE           shift and go to state 40
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 11

state 29

    (12) command -> WHILE condition . DO commands ENDWHILE
    DO              shift and go to state 41


state 30

    (22) condition -> value . GREATER_EQUALS value
    (23) condition -> value . LESSER_EQUALS value
    (24) condition -> value . GREATER_THAN value
    (25) condition -> value . LESSER_THAN value
    (26) condition -> value . NOT_EQUALS value
    (27) condition -> value . EQUALS value
    GREATER_EQUALS  shift and go to state 42
    LESSER_EQUALS   shift and go to state 43
    GREATER_THAN    shift and go to state 44
    LESSER_THAN     shift and go to state 45
    NOT_EQUALS      shift and go to state 46
    EQUALS          shift and go to state 47


state 31

    (13) command -> IF condition . THEN commands ELSE commands ENDIF
    (14) command -> IF condition . THEN commands ENDIF
    THEN            shift and go to state 48


state 32

    (3) declarations -> declarations PIDENTIFIER LPAREN NUMBER . COLON NUMBER RPAREN SEMICOLON
    COLON           shift and go to state 49


state 33

    (7) command -> WRITE value SEMICOLON .
    END             reduce using rule 7 (command -> WRITE value SEMICOLON .)
    WRITE           reduce using rule 7 (command -> WRITE value SEMICOLON .)
    READ            reduce using rule 7 (command -> WRITE value SEMICOLON .)
    FOR             reduce using rule 7 (command -> WRITE value SEMICOLON .)
    DO              reduce using rule 7 (command -> WRITE value SEMICOLON .)
    WHILE           reduce using rule 7 (command -> WRITE value SEMICOLON .)
    IF              reduce using rule 7 (command -> WRITE value SEMICOLON .)
    PIDENTIFIER     reduce using rule 7 (command -> WRITE value SEMICOLON .)
    ENDWHILE        reduce using rule 7 (command -> WRITE value SEMICOLON .)
    ELSE            reduce using rule 7 (command -> WRITE value SEMICOLON .)
    ENDIF           reduce using rule 7 (command -> WRITE value SEMICOLON .)
    ENDFOR          reduce using rule 7 (command -> WRITE value SEMICOLON .)


state 34

    (8) command -> READ identifier SEMICOLON .
    END             reduce using rule 8 (command -> READ identifier SEMICOLON .)
    WRITE           reduce using rule 8 (command -> READ identifier SEMICOLON .)
    READ            reduce using rule 8 (command -> READ identifier SEMICOLON .)
    FOR             reduce using rule 8 (command -> READ identifier SEMICOLON .)
    DO              reduce using rule 8 (command -> READ identifier SEMICOLON .)
    WHILE           reduce using rule 8 (command -> READ identifier SEMICOLON .)
    IF              reduce using rule 8 (command -> READ identifier SEMICOLON .)
    PIDENTIFIER     reduce using rule 8 (command -> READ identifier SEMICOLON .)
    ENDWHILE        reduce using rule 8 (command -> READ identifier SEMICOLON .)
    ELSE            reduce using rule 8 (command -> READ identifier SEMICOLON .)
    ENDIF           reduce using rule 8 (command -> READ identifier SEMICOLON .)
    ENDFOR          reduce using rule 8 (command -> READ identifier SEMICOLON .)


state 35

    (15) command -> identifier ASSIGN expression . SEMICOLON
    SEMICOLON       shift and go to state 50


state 36

    (16) expression -> value . MODULO value
    (17) expression -> value . DIVIDE value
    (18) expression -> value . TIMES value
    (19) expression -> value . MINUS value
    (20) expression -> value . PLUS value
    (21) expression -> value .
    MODULO          shift and go to state 51
    DIVIDE          shift and go to state 52
    TIMES           shift and go to state 53
    MINUS           shift and go to state 54
    PLUS            shift and go to state 55
    SEMICOLON       reduce using rule 21 (expression -> value .)


state 37

    (9) command -> FOR PIDENTIFIER FROM . value DOWNTO value DO commands ENDFOR
    (10) command -> FOR PIDENTIFIER FROM . value TO value DO commands ENDFOR
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 56
    identifier                     shift and go to state 22

state 38

    (31) identifier -> PIDENTIFIER LPAREN PIDENTIFIER . RPAREN
    RPAREN          shift and go to state 57


state 39

    (30) identifier -> PIDENTIFIER LPAREN NUMBER . RPAREN
    RPAREN          shift and go to state 58


state 40

    (11) command -> DO commands WHILE . condition ENDDO
    (12) command -> WHILE . condition DO commands ENDWHILE
    (22) condition -> . value GREATER_EQUALS value
    (23) condition -> . value LESSER_EQUALS value
    (24) condition -> . value GREATER_THAN value
    (25) condition -> . value LESSER_THAN value
    (26) condition -> . value NOT_EQUALS value
    (27) condition -> . value EQUALS value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    condition                      shift and go to state 59
    value                          shift and go to state 30
    identifier                     shift and go to state 22

state 41

    (12) command -> WHILE condition DO . commands ENDWHILE
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 60
    command                        shift and go to state 8
    identifier                     shift and go to state 11

state 42

    (22) condition -> value GREATER_EQUALS . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 61
    identifier                     shift and go to state 22

state 43

    (23) condition -> value LESSER_EQUALS . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 62
    identifier                     shift and go to state 22

state 44

    (24) condition -> value GREATER_THAN . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 63
    identifier                     shift and go to state 22

state 45

    (25) condition -> value LESSER_THAN . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 64
    identifier                     shift and go to state 22

state 46

    (26) condition -> value NOT_EQUALS . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 65
    identifier                     shift and go to state 22

state 47

    (27) condition -> value EQUALS . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 66
    identifier                     shift and go to state 22

state 48

    (13) command -> IF condition THEN . commands ELSE commands ENDIF
    (14) command -> IF condition THEN . commands ENDIF
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 67
    command                        shift and go to state 8
    identifier                     shift and go to state 11

state 49

    (3) declarations -> declarations PIDENTIFIER LPAREN NUMBER COLON . NUMBER RPAREN SEMICOLON
    NUMBER          shift and go to state 68


state 50

    (15) command -> identifier ASSIGN expression SEMICOLON .
    END             reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    WRITE           reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    READ            reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    DO              reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    IF              reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    PIDENTIFIER     reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDWHILE        reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDIF           reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)
    ENDFOR          reduce using rule 15 (command -> identifier ASSIGN expression SEMICOLON .)


state 51

    (16) expression -> value MODULO . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 69
    identifier                     shift and go to state 22

state 52

    (17) expression -> value DIVIDE . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 70
    identifier                     shift and go to state 22

state 53

    (18) expression -> value TIMES . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 71
    identifier                     shift and go to state 22

state 54

    (19) expression -> value MINUS . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 72
    identifier                     shift and go to state 22

state 55

    (20) expression -> value PLUS . value
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 73
    identifier                     shift and go to state 22

state 56

    (9) command -> FOR PIDENTIFIER FROM value . DOWNTO value DO commands ENDFOR
    (10) command -> FOR PIDENTIFIER FROM value . TO value DO commands ENDFOR
    DOWNTO          shift and go to state 74
    TO              shift and go to state 75


state 57

    (31) identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .
    ASSIGN          reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    GREATER_EQUALS  reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    LESSER_EQUALS   reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    GREATER_THAN    reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    LESSER_THAN     reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    NOT_EQUALS      reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    EQUALS          reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    MODULO          reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    DIVIDE          reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    TIMES           reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    MINUS           reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    PLUS            reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    DOWNTO          reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    TO              reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    DO              reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    THEN            reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)
    ENDDO           reduce using rule 31 (identifier -> PIDENTIFIER LPAREN PIDENTIFIER RPAREN .)


state 58

    (30) identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .
    ASSIGN          reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    SEMICOLON       reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    GREATER_EQUALS  reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    LESSER_EQUALS   reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    GREATER_THAN    reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    LESSER_THAN     reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    NOT_EQUALS      reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    EQUALS          reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    MODULO          reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    DIVIDE          reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    TIMES           reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    MINUS           reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    PLUS            reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    DOWNTO          reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    TO              reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    DO              reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    THEN            reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)
    ENDDO           reduce using rule 30 (identifier -> PIDENTIFIER LPAREN NUMBER RPAREN .)


state 59

    (11) command -> DO commands WHILE condition . ENDDO
    (12) command -> WHILE condition . DO commands ENDWHILE
    ENDDO           shift and go to state 76
    DO              shift and go to state 41


state 60

    (12) command -> WHILE condition DO commands . ENDWHILE
    (6) commands -> commands . command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    ENDWHILE        shift and go to state 77
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 11

state 61

    (22) condition -> value GREATER_EQUALS value .
    DO              reduce using rule 22 (condition -> value GREATER_EQUALS value .)
    THEN            reduce using rule 22 (condition -> value GREATER_EQUALS value .)
    ENDDO           reduce using rule 22 (condition -> value GREATER_EQUALS value .)


state 62

    (23) condition -> value LESSER_EQUALS value .
    DO              reduce using rule 23 (condition -> value LESSER_EQUALS value .)
    THEN            reduce using rule 23 (condition -> value LESSER_EQUALS value .)
    ENDDO           reduce using rule 23 (condition -> value LESSER_EQUALS value .)


state 63

    (24) condition -> value GREATER_THAN value .
    DO              reduce using rule 24 (condition -> value GREATER_THAN value .)
    THEN            reduce using rule 24 (condition -> value GREATER_THAN value .)
    ENDDO           reduce using rule 24 (condition -> value GREATER_THAN value .)


state 64

    (25) condition -> value LESSER_THAN value .
    DO              reduce using rule 25 (condition -> value LESSER_THAN value .)
    THEN            reduce using rule 25 (condition -> value LESSER_THAN value .)
    ENDDO           reduce using rule 25 (condition -> value LESSER_THAN value .)


state 65

    (26) condition -> value NOT_EQUALS value .
    DO              reduce using rule 26 (condition -> value NOT_EQUALS value .)
    THEN            reduce using rule 26 (condition -> value NOT_EQUALS value .)
    ENDDO           reduce using rule 26 (condition -> value NOT_EQUALS value .)


state 66

    (27) condition -> value EQUALS value .
    DO              reduce using rule 27 (condition -> value EQUALS value .)
    THEN            reduce using rule 27 (condition -> value EQUALS value .)
    ENDDO           reduce using rule 27 (condition -> value EQUALS value .)


state 67

    (13) command -> IF condition THEN commands . ELSE commands ENDIF
    (14) command -> IF condition THEN commands . ENDIF
    (6) commands -> commands . command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    ELSE            shift and go to state 78
    ENDIF           shift and go to state 79
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 11

state 68

    (3) declarations -> declarations PIDENTIFIER LPAREN NUMBER COLON NUMBER . RPAREN SEMICOLON
    RPAREN          shift and go to state 80


state 69

    (16) expression -> value MODULO value .
    SEMICOLON       reduce using rule 16 (expression -> value MODULO value .)


state 70

    (17) expression -> value DIVIDE value .
    SEMICOLON       reduce using rule 17 (expression -> value DIVIDE value .)


state 71

    (18) expression -> value TIMES value .
    SEMICOLON       reduce using rule 18 (expression -> value TIMES value .)


state 72

    (19) expression -> value MINUS value .
    SEMICOLON       reduce using rule 19 (expression -> value MINUS value .)


state 73

    (20) expression -> value PLUS value .
    SEMICOLON       reduce using rule 20 (expression -> value PLUS value .)


state 74

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO . value DO commands ENDFOR
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 81
    identifier                     shift and go to state 22

state 75

    (10) command -> FOR PIDENTIFIER FROM value TO . value DO commands ENDFOR
    (28) value -> . identifier
    (29) value -> . NUMBER
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    NUMBER          shift and go to state 23
    PIDENTIFIER     shift and go to state 13

    value                          shift and go to state 82
    identifier                     shift and go to state 22

state 76

    (11) command -> DO commands WHILE condition ENDDO .
    END             reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    WRITE           reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    READ            reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    FOR             reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    DO              reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    WHILE           reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    IF              reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    PIDENTIFIER     reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    ENDWHILE        reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    ELSE            reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    ENDIF           reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)
    ENDFOR          reduce using rule 11 (command -> DO commands WHILE condition ENDDO .)


state 77

    (12) command -> WHILE condition DO commands ENDWHILE .
    END             reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    WRITE           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    READ            reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    FOR             reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    DO              reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    WHILE           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    IF              reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    PIDENTIFIER     reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ENDWHILE        reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ELSE            reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ENDIF           reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)
    ENDFOR          reduce using rule 12 (command -> WHILE condition DO commands ENDWHILE .)


state 78

    (13) command -> IF condition THEN commands ELSE . commands ENDIF
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 83
    command                        shift and go to state 8
    identifier                     shift and go to state 11

state 79

    (14) command -> IF condition THEN commands ENDIF .
    END             reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    WRITE           reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    READ            reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    FOR             reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    DO              reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    WHILE           reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    IF              reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    PIDENTIFIER     reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    ENDWHILE        reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    ELSE            reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    ENDIF           reduce using rule 14 (command -> IF condition THEN commands ENDIF .)
    ENDFOR          reduce using rule 14 (command -> IF condition THEN commands ENDIF .)


state 80

    (3) declarations -> declarations PIDENTIFIER LPAREN NUMBER COLON NUMBER RPAREN . SEMICOLON
    SEMICOLON       shift and go to state 84


state 81

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO value . DO commands ENDFOR
    DO              shift and go to state 85


state 82

    (10) command -> FOR PIDENTIFIER FROM value TO value . DO commands ENDFOR
    DO              shift and go to state 86


state 83

    (13) command -> IF condition THEN commands ELSE commands . ENDIF
    (6) commands -> commands . command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    ENDIF           shift and go to state 87
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 11

state 84

    (3) declarations -> declarations PIDENTIFIER LPAREN NUMBER COLON NUMBER RPAREN SEMICOLON .
    IN              reduce using rule 3 (declarations -> declarations PIDENTIFIER LPAREN NUMBER COLON NUMBER RPAREN SEMICOLON .)
    PIDENTIFIER     reduce using rule 3 (declarations -> declarations PIDENTIFIER LPAREN NUMBER COLON NUMBER RPAREN SEMICOLON .)


state 85

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO value DO . commands ENDFOR
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 88
    command                        shift and go to state 8
    identifier                     shift and go to state 11

state 86

    (10) command -> FOR PIDENTIFIER FROM value TO value DO . commands ENDFOR
    (5) commands -> . command
    (6) commands -> . commands command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    commands                       shift and go to state 89
    command                        shift and go to state 8
    identifier                     shift and go to state 11

state 87

    (13) command -> IF condition THEN commands ELSE commands ENDIF .
    END             reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WRITE           reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    READ            reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    FOR             reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    DO              reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    WHILE           reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    IF              reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    PIDENTIFIER     reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDWHILE        reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ELSE            reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDIF           reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)
    ENDFOR          reduce using rule 13 (command -> IF condition THEN commands ELSE commands ENDIF .)


state 88

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands . ENDFOR
    (6) commands -> commands . command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    ENDFOR          shift and go to state 90
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 11

state 89

    (10) command -> FOR PIDENTIFIER FROM value TO value DO commands . ENDFOR
    (6) commands -> commands . command
    (7) command -> . WRITE value SEMICOLON
    (8) command -> . READ identifier SEMICOLON
    (9) command -> . FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR
    (10) command -> . FOR PIDENTIFIER FROM value TO value DO commands ENDFOR
    (11) command -> . DO commands WHILE condition ENDDO
    (12) command -> . WHILE condition DO commands ENDWHILE
    (13) command -> . IF condition THEN commands ELSE commands ENDIF
    (14) command -> . IF condition THEN commands ENDIF
    (15) command -> . identifier ASSIGN expression SEMICOLON
    (30) identifier -> . PIDENTIFIER LPAREN NUMBER RPAREN
    (31) identifier -> . PIDENTIFIER LPAREN PIDENTIFIER RPAREN
    (32) identifier -> . PIDENTIFIER
    ENDFOR          shift and go to state 91
    WRITE           shift and go to state 9
    READ            shift and go to state 10
    FOR             shift and go to state 12
    DO              shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 16
    PIDENTIFIER     shift and go to state 13

    command                        shift and go to state 20
    identifier                     shift and go to state 11

state 90

    (9) command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .
    END             reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    WRITE           reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    READ            reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    FOR             reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    DO              reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    WHILE           reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    IF              reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    PIDENTIFIER     reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDWHILE        reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ELSE            reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDIF           reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)
    ENDFOR          reduce using rule 9 (command -> FOR PIDENTIFIER FROM value DOWNTO value DO commands ENDFOR .)


state 91

    (10) command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .
    END             reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    WRITE           reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    READ            reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    FOR             reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    DO              reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    WHILE           reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    IF              reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    PIDENTIFIER     reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDWHILE        reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ELSE            reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDIF           reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
    ENDFOR          reduce using rule 10 (command -> FOR PIDENTIFIER FROM value TO value DO commands ENDFOR .)
